{
  "_args": [
    [
      {
        "raw": "git+ssh://git@github.com/westy92/html-pdf-chrome.git",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "git+ssh://git@github.com/westy92/html-pdf-chrome.git",
        "spec": "git+ssh://git@github.com/westy92/html-pdf-chrome.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:westy92/html-pdf-chrome.git",
          "sshUrl": "git+ssh://git@github.com/westy92/html-pdf-chrome.git",
          "httpsUrl": "git+https://github.com/westy92/html-pdf-chrome.git",
          "gitUrl": "git://github.com/westy92/html-pdf-chrome.git",
          "shortcut": "github:westy92/html-pdf-chrome",
          "directUrl": "https://raw.githubusercontent.com/westy92/html-pdf-chrome/master/package.json"
        }
      },
      "/Users/tomascelizna/Devel/dragonfly_chrome_headless"
    ]
  ],
  "_from": "git+ssh://git@github.com/westy92/html-pdf-chrome.git",
  "_id": "html-pdf-chrome@0.1.0",
  "_inCache": true,
  "_location": "/html-pdf-chrome",
  "_phantomChildren": {},
  "_requested": {
    "raw": "git+ssh://git@github.com/westy92/html-pdf-chrome.git",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "git+ssh://git@github.com/westy92/html-pdf-chrome.git",
    "spec": "git+ssh://git@github.com/westy92/html-pdf-chrome.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:westy92/html-pdf-chrome.git",
      "sshUrl": "git+ssh://git@github.com/westy92/html-pdf-chrome.git",
      "httpsUrl": "git+https://github.com/westy92/html-pdf-chrome.git",
      "gitUrl": "git://github.com/westy92/html-pdf-chrome.git",
      "shortcut": "github:westy92/html-pdf-chrome",
      "directUrl": "https://raw.githubusercontent.com/westy92/html-pdf-chrome/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "git+ssh://git@github.com/westy92/html-pdf-chrome.git#22122a0f761d96caf4ad5d958d80c4ffbf1bc971",
  "_shasum": "f668a55a8f3cc289cde55d8d791304eeb92817a5",
  "_shrinkwrap": null,
  "_spec": "git+ssh://git@github.com/westy92/html-pdf-chrome.git",
  "_where": "/Users/tomascelizna/Devel/dragonfly_chrome_headless",
  "author": {
    "name": "Seth Westphal",
    "email": "seth@sethwestphal.com",
    "url": "http://www.sethwestphal.com/"
  },
  "bugs": {
    "url": "https://github.com/westy92/html-pdf-chrome/issues"
  },
  "dependencies": {
    "chrome-launcher": "^0.3.1",
    "chrome-remote-interface": "^0.24.1"
  },
  "description": "HTML to PDF converter via Chrome/Chromium",
  "devDependencies": {
    "@types/chai": "^3.5.2",
    "@types/chai-string": "^1.1.30",
    "@types/mocha": "^2.2.41",
    "@types/mock-fs": "^3.6.30",
    "@types/node": "^8.0.9",
    "@types/sinon": "^2.3.2",
    "@types/sinon-chai": "^2.7.27",
    "chai": "^3.5.0",
    "chai-string": "^1.3.0",
    "del": "^3.0.0",
    "gulp": "^3.9.1",
    "gulp-sourcemaps": "^2.6.0",
    "gulp-spawn-mocha": "^3.3.0",
    "gulp-tslint": "^8.0.0",
    "gulp-typescript": "^3.2.0",
    "mocha": "^3.3.0",
    "mock-fs": "^4.3.0",
    "pdf2json": "^1.1.7",
    "remap-istanbul": "^0.9.5",
    "sinon": "^2.3.6",
    "sinon-chai": "^2.10.0",
    "tcp-port-used": "^0.1.2",
    "tslint": "^5.5.0",
    "tslint-microsoft-contrib": "^5.0.1",
    "typescript": "^2.4.1"
  },
  "engines": {
    "node": ">= 6"
  },
  "gitHead": "22122a0f761d96caf4ad5d958d80c4ffbf1bc971",
  "homepage": "https://github.com/westy92/html-pdf-chrome",
  "keywords": [
    "html",
    "pdf",
    "html-pdf",
    "chrome",
    "chromium",
    "headless",
    "typescript",
    "windows",
    "mac",
    "linux",
    "nodejs"
  ],
  "license": "MIT",
  "main": "lib/src/index.js",
  "name": "html-pdf-chrome",
  "optionalDependencies": {},
  "readme": "# html-pdf-chrome\n\n[![npm version](https://badge.fury.io/js/html-pdf-chrome.svg)](https://badge.fury.io/js/html-pdf-chrome)\n[![Build Status](https://travis-ci.org/westy92/html-pdf-chrome.svg)](https://travis-ci.org/westy92/html-pdf-chrome/)\n[![Dependency Status](https://david-dm.org/westy92/html-pdf-chrome.svg)](https://david-dm.org/westy92/html-pdf-chrome)\n[![Known Vulnerabilities](https://snyk.io/test/github/westy92/html-pdf-chrome/badge.svg)](https://snyk.io/test/github/westy92/html-pdf-chrome)\n\nHTML to PDF converter via Chrome/Chromium.\n\n## Prerequisites\n\n* Chrome/Chromium 59 or higher (60 or higher for some features)\n* Windows, macOS, or Linux\n* Node.js v6 or later\n\n## Installation\n\n```bash\nnpm install --save html-pdf-chrome\n```\n\n## Usage\n\n__Note:__ It is _strongly_ recommended that you keep Chrome running side-by-side with Node.js.  There is significant overhead starting up Chrome for each PDF generation which can be easily avoided.\n\nIt's suggested to use [pm2](http://pm2.keymetrics.io/) to ensure Chrome continues to run.  If it crashes, it will restart automatically.\n\nAs of this writing, headless Chrome uses about 65mb of RAM while idle.\n\n```bash\n# install pm2 globally\nnpm install -g pm2\n# start Chrome and be sure to specify a port to use in the html-pdf-chrome options.\npm2 start google-chrome \\\n  --interpreter none \\\n  -- \\\n  --headless \\\n  --disable-gpu \\\n  --disable-translate \\\n  --disable-extensions \\\n  --disable-background-networking \\\n  --safebrowsing-disable-auto-update \\\n  --disable-sync \\\n  --metrics-recording-only \\\n  --disable-default-apps \\\n  --no-first-run \\\n  --remote-debugging-port=<port goes here>\n# run your Node.js app.\n```\n\nTypeScript:\n\n```js\nimport * as htmlPdf from 'html-pdf-chrome';\n\nconst html = '<p>Hello, world!</p>';\nconst options: htmlPdf.CreateOptions = {\n  port: 9222, // port Chrome is listening on\n};\n\n// async\nconst pdf = await htmlPdf.create(html, options);\nawait pdf.toFile('test.pdf');\nconst base64 = pdf.toBase64();\nconst buffer = pdf.toBuffer();\n\n// Promise\nhtmlPdf.create(html, options).then((pdf) => pdf.toFile('test.pdf'));\nhtmlPdf.create(html, options).then((pdf) => pdf.toBase64());\nhtmlPdf.create(html, options).then((pdf) => pdf.toBuffer());\n```\n\nJavaScript:\n\n```js\nconst htmlPdf = require('html-pdf-chrome');\n\nconst html = '<p>Hello, world!</p>';\nconst options = {\n  port: 9222, // port Chrome is listening on\n};\n\nhtmlPdf.create(html, options).then((pdf) => pdf.toFile('test.pdf'));\nhtmlPdf.create(html, options).then((pdf) => pdf.toBase64());\nhtmlPdf.create(html, options).then((pdf) => pdf.toBuffer());\n```\n\nView the full documentation in the source code.\n\n### Using an External Site\n\n```js\nimport * as htmlPdf from 'html-pdf-chrome';\n\nconst options: htmlPdf.CreateOptions = {\n  port: 9222, // port Chrome is listening on\n};\n\nconst url = 'https://github.com/westy92/html-pdf-chrome';\nconst pdf = await htmlPdf.create(url, options);\n```\n\n### Using a Template Engine\n\nPug (formerly known as Jade)\n\n```js\nimport * as htmlPdf from 'html-pdf-chrome';\nimport * as pug from 'pug';\n\nconst template = pug.compile('p Hello, #{noun}!');\nconst templateData = {\n  noun: 'world',\n};\nconst options: htmlPdf.CreateOptions = {\n  port: 9222, // port Chrome is listening on\n};\n\nconst html = template(templateData);\nconst pdf = await htmlPdf.create(html, options);\n```\n\n### Trigger Render Completion\n\nThere are a few `CompletionTrigger` types that wait for something to occur before triggering PDF printing.\n\n* Callback - waits for a callback to be called\n* Element - waits for an element to be injected into the DOM\n* Event - waits for an Event to fire\n* Timer - waits a specified amount of time\n* Variable - waits for a variable to be set to `true`\n\n```js\nconst options: htmlPdf.CreateOptions = {\n  port: 9222, // port Chrome is listening on\n  completionTrigger: new htmlPdf.CompletionTrigger.Timer(5000), // milliseconds\n};\n\n// Alternative completionTrigger options:\nnew htmlPdf.CompletionTrigger.Callback(\n  'cbName', // optional, name of the callback to define for the browser to call when finished rendering.  Defaults to 'htmlPdfCb'.\n  5000 // optional, timeout (milliseconds)\n),\n\nnew htmlPdf.CompletionTrigger.Element(\n  'div#myElement', // name of the DOM element to wait for\n  5000 // optional, timeout (milliseconds)\n),\n\nnew htmlPdf.CompletionTrigger.Event(\n  'myEvent', // name of the event to listen for\n  '#myElement', // optional DOM element CSS selector to listen on, defaults to body\n  5000 // optional timeout (milliseconds)\n),\n\nnew htmlPdf.CompletionTrigger.Variable(\n  'myVarName', // optional, name of the variable to wait for.  Defaults to 'htmlPdfDone'\n  5000 // optional, timeout (milliseconds)\n),\n```\n\n## License\n\nhtml-pdf-chrome is released under the MIT License.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/westy92/html-pdf-chrome.git"
  },
  "scripts": {
    "test": "gulp"
  },
  "typings": "lib/src/index.d.ts",
  "version": "0.1.0"
}
